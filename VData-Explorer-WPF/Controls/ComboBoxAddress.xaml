<ComboBox x:Class="VData_Explorer.Controls.ComboBoxAddress"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
          xmlns:local="clr-namespace:VData_Explorer.Controls"
          xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
          xmlns:mah1="http://metro.mahapps.com/winfx/xaml/shared"
          xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
          mc:Ignorable="d" Style="{StaticResource {x:Type ComboBox}}" x:Name="myself">
    <ComboBox.Template>
        <ControlTemplate TargetType="{x:Type ComboBox}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="enterGotFocus">
                    <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_WatermarkMessage"/>
                </Storyboard>
                <Storyboard x:Key="exitGotFocus">
                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_WatermarkMessage"/>
                </Storyboard>
                <Storyboard x:Key="enterHasText">
                    <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_WatermarkMessage"/>
                </Storyboard>
                <Storyboard x:Key="exitHasText">
                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_WatermarkMessage"/>
                </Storyboard>
            </ControlTemplate.Resources>
            <Grid>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused"/>
                        <VisualState x:Name="Unfocused"/>
                        <VisualState x:Name="FocusedDropDown">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="3" CornerRadius="{Binding (mah:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Grid Margin="{TemplateBinding BorderThickness}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="TextColumn" Width="*"/>
                        <ColumnDefinition x:Name="ButtonColumn" Width="{Binding (mah:TextBoxHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ColumnDefinition x:Name="ToggleButtonColumn" Width="{Binding (mah:TextBoxHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition x:Name="ButtonRow" Height="*"/>
                    </Grid.RowDefinitions>
                    <ToggleButton x:Name="PART_DropDownToggle" mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}" mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}" BorderThickness="0" mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}" mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}" Background="Transparent" mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}" Grid.ColumnSpan="3" mah:TextBoxHelper.ClearTextButton="{TemplateBinding mah:TextBoxHelper.ClearTextButton}" mah:ControlsHelper.CornerRadius="{Binding (mah:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" Padding="{TemplateBinding Padding}" Grid.RowSpan="2" Style="{DynamicResource MetroComboBoxDropDownToggleButtonStyle}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                    <TextBox x:Name="PART_EditableTextBox" mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}" mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}" BorderThickness="0" mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}" mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}" Background="{x:Null}" mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}" Grid.Column="0" CharacterCasing="{Binding (mah:ComboBoxHelper.CharacterCasing), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" Focusable="True" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" mah:TextBoxHelper.HasText="{TemplateBinding mah:TextBoxHelper.HasText}" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="0" MaxLength="{Binding (mah:ComboBoxHelper.MaxLength), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Padding="{TemplateBinding Padding}" Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" mah:TextBoxHelper.UseFloatingWatermark="{TemplateBinding mah:TextBoxHelper.UseFloatingWatermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" mah:TextBoxHelper.WatermarkTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" mah:TextBoxHelper.Watermark="{TemplateBinding mah:TextBoxHelper.Watermark}" mah:TextBoxHelper.WatermarkAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <ControlTemplate.Resources>
                                                <Storyboard x:Key="enterGotFocus">
                                                    <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                                <Storyboard x:Key="exitGotFocus">
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                                <Storyboard x:Key="enterHasText">
                                                    <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                                <Storyboard x:Key="exitHasText">
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                            </ControlTemplate.Resources>
                                            <Grid Background="{TemplateBinding Background}">
                                                <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding Padding}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition x:Name="TextColumn" Width="*"/>
                                                        <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition x:Name="ButtonRow" Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="0" Grid.Row="1" VerticalAlignment="Stretch"/>
                                                    <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="3,0" Padding="{TemplateBinding Padding}" Grid.Row="1" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" Text="{TemplateBinding mah:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <ContentControl x:Name="PART_FloatingMessageContainer" Grid.Column="0" Grid.Row="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                                                        <ContentControl.Height>
                                                            <MultiBinding Converter="{mah1:MathMultiplyConverter}" UpdateSourceTrigger="Default">
                                                                <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                                                <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity"/>
                                                            </MultiBinding>
                                                        </ContentControl.Height>
                                                        <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" Text="{TemplateBinding mah:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                            <TextBlock.RenderTransform>
                                                                <TranslateTransform>
                                                                    <TranslateTransform.Y>
                                                                        <MultiBinding Converter="{mah1:MathSubtractConverter}" UpdateSourceTrigger="Default">
                                                                            <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                                                            <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight"/>
                                                                        </MultiBinding>
                                                                    </TranslateTransform.Y>
                                                                </TranslateTransform>
                                                            </TextBlock.RenderTransform>
                                                        </TextBlock>
                                                    </ContentControl>
                                                    <Button x:Name="PART_ClearText" ContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}" Content="{TemplateBinding mah:TextBoxHelper.ButtonContent}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}" FontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}" IsTabStop="False" mah:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (mah:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}">
                                                        <Button.Visibility>
                                                            <Binding Mode="OneWay" Path="(mah:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <BooleanToVisibilityConverter/>
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </Button.Visibility>
                                                    </Button>
                                                </Grid>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                                    <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                        <Condition Binding="{Binding (mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                                        <Condition Binding="{Binding (mah:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiDataTrigger.EnterActions>
                                                    <MultiDataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiDataTrigger.ExitActions>
                                                </MultiDataTrigger>
                                                <DataTrigger Binding="{Binding (mah:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
                                                    <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                                    <Setter Property="Grid.ColumnSpan" TargetName="PART_Message" Value="2"/>
                                                </DataTrigger>
                                                <Trigger Property="IsReadOnly" Value="True">
                                                    <Setter Property="IsEnabled" TargetName="PART_ClearText" Value="False"/>
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                                    <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                                    <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                                    <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                                    <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                                    <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="mah:TextBoxHelper.HasText" Value="False"/>
                                                        <Condition Property="IsFocused" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiTrigger.EnterActions>
                                                    <MultiTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiTrigger.ExitActions>
                                                </MultiTrigger>
                                                <Trigger Property="mah:TextBoxHelper.HasText" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.BasedOn>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
                                        <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                                        <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
                                        <Setter Property="mah:TextBoxHelper.ButtonFontSize" Value="{DynamicResource ClearTextButtonFontSize}"/>
                                        <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="22"/>
                                        <Setter Property="mah:TextBoxHelper.IsMonitoring" Value="True"/>
                                        <Setter Property="mah:TextBoxHelper.IsSpellCheckContextMenuEnabled" Value="{Binding (SpellCheck.IsEnabled), RelativeSource={RelativeSource Self}}"/>
                                        <Setter Property="mah:TextBoxHelper.WatermarkWrapping" Value="{Binding TextWrapping, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                                        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                        <Setter Property="MinHeight" Value="26"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                    <ControlTemplate.Resources>
                                                        <Storyboard x:Key="enterGotFocus">
                                                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                        </Storyboard>
                                                        <Storyboard x:Key="exitGotFocus">
                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                        </Storyboard>
                                                        <Storyboard x:Key="enterHasText">
                                                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                        </Storyboard>
                                                        <Storyboard x:Key="exitHasText">
                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                        </Storyboard>
                                                    </ControlTemplate.Resources>
                                                    <Grid>
                                                        <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                                                            <Border x:Name="PART_WaitingForDataEffectGrid" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Effect="{DynamicResource WaitingForDataEffect}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        </AdornerDecorator>
                                                        <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Grid x:Name="PART_InnerGrid" Margin="2">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition x:Name="TextColumn" Width="*"/>
                                                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition x:Name="ButtonRow" Height="*"/>
                                                            </Grid.RowDefinitions>
                                                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                                            <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,2" Padding="{TemplateBinding Padding}" Grid.Row="1" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" TextWrapping="{TemplateBinding mah:TextBoxHelper.WatermarkWrapping}" Text="{TemplateBinding mah:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <ContentControl x:Name="PART_FloatingMessageContainer" Grid.Column="0" Grid.Row="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                                                                <ContentControl.Height>
                                                                    <MultiBinding Converter="{mah1:MathMultiplyConverter}" UpdateSourceTrigger="Default">
                                                                        <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                                                        <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity"/>
                                                                    </MultiBinding>
                                                                </ContentControl.Height>
                                                                <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" Text="{TemplateBinding mah:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                    <TextBlock.RenderTransform>
                                                                        <TranslateTransform>
                                                                            <TranslateTransform.Y>
                                                                                <MultiBinding Converter="{mah1:MathSubtractConverter}" UpdateSourceTrigger="Default">
                                                                                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                                                                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight"/>
                                                                                </MultiBinding>
                                                                            </TranslateTransform.Y>
                                                                        </TranslateTransform>
                                                                    </TextBlock.RenderTransform>
                                                                </TextBlock>
                                                            </ContentControl>
                                                            <Button x:Name="PART_ClearText" ContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}" Content="{TemplateBinding mah:TextBoxHelper.ButtonContent}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}" FontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}" IsTabStop="False" mah:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (mah:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}">
                                                                <Button.Visibility>
                                                                    <Binding Mode="OneWay" Path="(mah:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                        <Binding.Converter>
                                                                            <BooleanToVisibilityConverter/>
                                                                        </Binding.Converter>
                                                                    </Binding>
                                                                </Button.Visibility>
                                                            </Button>
                                                        </Grid>
                                                        <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (mah:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding (mah:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Left">
                                                            <Setter Property="Width" TargetName="ButtonColumn" Value="*"/>
                                                            <Setter Property="Grid.Column" TargetName="PART_ClearText" Value="0"/>
                                                            <Setter Property="Grid.Column" TargetName="PART_ContentHost" Value="1"/>
                                                            <Setter Property="Grid.Column" TargetName="PART_Message" Value="1"/>
                                                            <Setter Property="Width" TargetName="TextColumn" Value="Auto"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                                            <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                                                        </DataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                <Condition Binding="{Binding (mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                <Condition Binding="{Binding (mah:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                    <Visibility>Visible</Visibility>
                                                                                </DiscreteObjectKeyFrame.Value>
                                                                            </DiscreteObjectKeyFrame>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                            <DoubleAnimation.EasingFunction>
                                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                            </DoubleAnimation.EasingFunction>
                                                                        </DoubleAnimation>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </MultiDataTrigger.EnterActions>
                                                            <MultiDataTrigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                            <DoubleAnimation.EasingFunction>
                                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                            </DoubleAnimation.EasingFunction>
                                                                        </DoubleAnimation>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                    <Visibility>Collapsed</Visibility>
                                                                                </DiscreteObjectKeyFrame.Value>
                                                                            </DiscreteObjectKeyFrame>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </MultiDataTrigger.ExitActions>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding (mah:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Right"/>
                                                                <Condition Binding="{Binding (mah:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                                            <Setter Property="Grid.ColumnSpan" TargetName="PART_Message" Value="2"/>
                                                        </MultiDataTrigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (mah:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                                                        </Trigger>
                                                        <Trigger Property="IsReadOnly" Value="True">
                                                            <Setter Property="IsEnabled" TargetName="PART_ClearText" Value="False"/>
                                                        </Trigger>
                                                        <Trigger Property="IsFocused" Value="True">
                                                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (mah:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                                            <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="mah:TextBoxHelper.HasText" Value="False"/>
                                                                <Condition Property="IsFocused" Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <MultiTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </MultiTrigger.EnterActions>
                                                            <MultiTrigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </MultiTrigger.ExitActions>
                                                        </MultiTrigger>
                                                        <Trigger Property="mah:TextBoxHelper.HasText" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsVisible" Value="True"/>
                                                                <Condition Property="mah:TextBoxHelper.IsWaitingForData" Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <MultiTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation AutoReverse="True" Timeline.DesiredFrameRate="30" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="PART_WaitingForDataEffectGrid"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </MultiTrigger.EnterActions>
                                                            <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Visible"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="mah:TextBoxHelper.IsWaitingForData" Value="False">
                                                            <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Collapsed"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
                                    </Style>
                                </Style.BasedOn>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <TextBlock x:Name="PART_WatermarkMessage" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,0" Padding="{TemplateBinding Padding}" Grid.Row="1" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" Text="{TemplateBinding mah:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <ContentControl x:Name="PART_FloatingMessageContainer" Grid.Column="0" Grid.Row="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                        <ContentControl.Height>
                            <MultiBinding Converter="{mah1:MathMultiplyConverter}" UpdateSourceTrigger="Default">
                                <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity"/>
                            </MultiBinding>
                        </ContentControl.Height>
                        <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2,2,0,0" Style="{DynamicResource MetroAutoCollapsingTextBlock}" TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" Text="{TemplateBinding mah:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextBlock.RenderTransform>
                                <TranslateTransform>
                                    <TranslateTransform.Y>
                                        <MultiBinding Converter="{mah1:MathSubtractConverter}" UpdateSourceTrigger="Default">
                                            <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                            <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight"/>
                                        </MultiBinding>
                                    </TranslateTransform.Y>
                                </TranslateTransform>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </ContentControl>
                    <Grid x:Name="ContentSite" Grid.Column="0" Margin="4,0" Grid.Row="1">
                        <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </Grid>
                <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" Grid.ColumnSpan="3" CornerRadius="{Binding (mah:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0.6" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed"/>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Grid MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{Binding MinDropDownWidth, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border x:Name="PopupBorder" BorderBrush="{DynamicResource ComboBoxPopupBorderBrush}" BorderThickness="{DynamicResource ComboBoxPopupBorderThemeThickness}" Background="{DynamicResource WhiteBrush}" HorizontalAlignment="Stretch" Height="Auto" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ListBox BorderThickness="0" Padding="{DynamicResource ComboBoxPopupBorderThemePadding}" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                     VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling"
                                     VirtualizingStackPanel.CacheLength="2,3" VirtualizingStackPanel.CacheLengthUnit="Page"
                                     VirtualizingStackPanel.ScrollUnit="Pixel"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible"
                                     x:Name="ItemsPresenter" SelectionMode="Single"
                                     KeyboardNavigation.DirectionalNavigation="Contained"
                                     ItemsSource="{TemplateBinding ItemsSource}"
                                     SelectedItem="{TemplateBinding SelectedItem}"
                                     SelectedIndex="{TemplateBinding SelectedIndex}"
                                     SelectedValue="{TemplateBinding SelectedValue}"
                                     SelectionChanged="ItemsPresenter_SelectionChanged">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                            <!--
                        <ScrollViewer BorderThickness="0" Padding="{DynamicResource ComboBoxPopupBorderThemePadding}">
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"  />
                        </ScrollViewer>
                        -->
                            <!--VirtualizingPanel.IsVirtualizing="True"  VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.CacheLengthUnit="Page" VirtualizingPanel.CacheLength="2,3" VirtualizingPanel.ScrollUnit="Pixel"-->
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Value="False">
                            <Condition.Binding>
                                <Binding Path="ContextMenu" RelativeSource="{RelativeSource Self}" Converter="{StaticResource nullconverter}" />
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="ContextMenu" TargetName="PART_EditableTextBox" Value="{Binding ContextMenu, RelativeSource={RelativeSource TemplatedParent}}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource Self}}" Value="False"/>
                        <Condition Binding="{Binding SelectedItem, RelativeSource={RelativeSource Self}}" Value="{x:Null}"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="PART_WatermarkMessage" Value="Visible"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True">
                            <Condition.Binding>
                                <Binding Mode="OneWay" Path="SelectedItem" RelativeSource="{RelativeSource Self}" Converter="{StaticResource nullconverter}" />
                            </Condition.Binding>
                        </Condition>
                        <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource Self}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_WatermarkMessage"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_WatermarkMessage"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="False">
                            <Condition.Binding>
                                <Binding Mode="OneWay" Path="SelectedItem" RelativeSource="{RelativeSource Self}" Converter="{StaticResource nullconverter}" />
                            </Condition.Binding>
                        </Condition>
                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource Self}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_WatermarkMessage"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_WatermarkMessage"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding (mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource Self}}" Value="False"/>
                        <Condition Value="False">
                            <Condition.Binding>
                                <Binding Mode="OneWay" Path="SelectedItem" RelativeSource="{RelativeSource Self}" Converter="{StaticResource nullconverter}" />
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Collapsed</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding (mah:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
                    <Setter Property="Grid.ColumnSpan" TargetName="ContentSite" Value="2"/>
                    <Setter Property="Grid.ColumnSpan" TargetName="PART_EditableTextBox" Value="2"/>
                    <Setter Property="Grid.ColumnSpan" TargetName="PART_WatermarkMessage" Value="2"/>
                </DataTrigger>
                <Trigger Property="IsEditable" Value="True">
                    <Setter Property="IsTabStop" Value="False"/>
                    <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden"/>
                    <Setter Property="Background" TargetName="PART_DropDownToggle" Value="{x:Null}"/>
                    <Setter Property="Focusable" TargetName="PART_DropDownToggle" Value="False"/>
                    <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsEditable" Value="False"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource GrayBrush9}"/>
                </MultiTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="Border" Value="{Binding (mah:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                </Trigger>
                <Trigger Property="IsFocused" SourceName="PART_EditableTextBox" Value="True">
                    <Setter Property="BorderBrush" TargetName="Border" Value="{Binding (mah:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="Border" Value="{Binding (mah:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                    <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                    <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" TargetName="Border" Value="{Binding (mah:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" TargetName="DisabledVisualElement" Value="Visible"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ComboBox.Template>
</ComboBox>
